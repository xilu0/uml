@startuml
class Go {
    +简洁和高效的并发处理
    +快速编译速度
    +广泛的标准库支持
    +自动垃圾回收
    #适用于：云服务、微服务、DevOps工具
}

class Rust {
    +内存安全保证
    +无需垃圾回收的性能优势
    +精细的内存控制
    +丰富的类型系统
    #适用于：系统编程、区块链、嵌入式系统
}

Go : 并发模型: goroutines
Rust : 并发模型: 线程和消息传递

Go : 学习曲线: 平缓
Rust : 学习曲线: 陡峭

Go -right-|> Rust : 对比
@enduml
